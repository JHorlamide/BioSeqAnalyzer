version: '3.8'

services:
  redis-cache:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-cache:/data

  mongodb-server:
    image: mongo:4.4
    container_name: mongodb-server
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "1234"

  mysql-server:
    container_name: mysql-server
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "password"
 
  mysql2:
    container_name: mysql2
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "RootPass"

  user-service:
    container_name: user-service
    build:
      context: ../UserService
      target: production
    tty: true
    restart: unless-stopped
    ports: [ "7070:7070" ]
    volumes:
      - ../UserService/app:/app:cached,ro
    env_file: [ ../UserService/.env ]
    depends_on: [ "mongodb-server" ]

  protein-analyzer:
    container_name: protein-analyzer
    build:
      context: ../protein-analyzer
      target: production
    tty: true
    restart: unless-stopped
    ports: [ "8080:8080" ]
    volumes:
      - ../protein-analyzer/app:/app:cached,ro
    env_file: [ ../protein-analyzer/.env ]
    depends_on: [ "mongodb-server", "redis-cache" ]
    environment:
      REDIS_PORT: 6379
      REDIS_HOST: "redis-cache"
      REDIS_USERNAME: "protein"
      REDIS_PASSWORD: "protein-12345"

  dna-sequence:
    build:
      context: ../dna-sequence
      dockerfile: ../dna-sequence/Dockerfile
    restart: unless-stopped
    ports: [ "8000:8000" ]
    env_file: [ ../dna-sequence/.env ]
    depends_on: [ "mysql-server" ]

  api-gateway:
    container_name: api-gateway
    build:
      context: ../backend/api-gateway
      target: production
    tty: true
    restart: unless-stopped
    ports: [ "9090:9090" ]
    volumes:
      - ../api-gateway/app:/app:cached,ro
    env_file: [ ../api-gateway/.env ]
    depends_on:
      - protein-analyzer
      - dna-sequence
      - user-service

  client:
    container_name: client
    build: ../client
    tty: true
    restart: unless-stopped
    ports: [ "5173:5173" ]
    volumes:
      - ./client/public:/client/public:cached,ro
      - ./client/src:/client/src:cached,ro
    env_file: [ ../client/.env ]
    depends_on: [ "protein-analyzer", "dna-sequence", "user-service" ]

volumes:
  redis-cache:
    driver: local
